{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "csharp",
		"prefix": "repos",
		"body": [
			"using System.Linq;",
			"using System.Threading.Tasks;",
			"using <PROJECT>.Infra.Data.Context;",
			"using Microsoft.EntityFrameworkCore;",
			"using <PROJECT>.Domain.Interfaces.Repository.Tenants;",
			"",
			"namespace <PROJECT>.Infra.Data.Repository.<PATH>.<NAME>",
			"{",
			"    public class <NAME>Repository : I<NAME>Repository",
			"    {",
			"        private readonly <PROJECT>Context _context;",
			"        private readonly ITenantRepository _tenantRepository;",
			"",
			"        public <NAME>Repository( <PROJECT>Context context",
			"                               , ITenantRepository tenantRepository)",
			"        {",
			"            _context = context;",
			"            _tenantRepository = tenantRepository;",
			"        }",
			"",
			"        public async Task<<NAME>Response> Handle(<NAME>Request request)",
			"        {",
			"            var tenantRecord = await _tenantRepository.Handle(request);",
			"            if (tenantRecord == null)",
			"            {",
			"                return new <NAME>Response(false, <STRING>) {",
			"                    IsNotFound = true",
			"                };",
			"            }",
			"",
			"            request.Query = string.IsNullOrEmpty(request.Query) ||",
			"            request.Query.ToLower().Equals('[null]') ? string.Empty : ",
			"            request.Query.ToLower();",
			"",
			"            return new <NAME>Response ((",
			"                    await _context.<TABLE>",
			"                               // LINQ Code",
			"                                .ToListAsync()));",
			"        }",
			"    }",
			"}"
		],
		"description": "Create a repository"
	}
}