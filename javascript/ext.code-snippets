{
    "Create Response Ext.decode line": {
        "scope": "javascript",
        "prefix": "jdc",
        "body": [
            "const json = Ext.decode(response.responseText, true);"
        ],
        "description": "Create Response Ext.decode line."
    },
    "Put Ext Debug Tag": {
        "scope": "javascript",
        "prefix": "deb",
        "body": [
            "//<debug>",
            "$0",
            "//</debug>"
        ],
        "description": "Put Ext Debug Tag."
    },
    "Put Ext Debugger": {
        "scope": "javascript",
        "prefix": "dg",
        "body": [
            "//<debug>",
            "debugger;",
            "//</debug>",
            "$0"
        ],
        "description": "Put Ext Debug Tag."
    },
    "Me This": {
        "scope": "javascript",
        "prefix": "cmt",
        "body": [
            "const me = this;$0",
        ],
        "description": "Declare const this as me."
    },
    "Get View": {
        "scope": "javascript",
        "prefix": "gvw",
        "body": [
            "const view = me.getView();$0",
        ],
        "description": "Get View"
    },
    "Get ViewModel": {
        "scope": "javascript",
        "prefix": "gvm",
        "body": [
            "const viewModel = me.getViewModel();$0"
        ],
        "description": "Get ViewModel"
    },
    "Get General": {
        "scope": "javascript",
        "prefix": "gvg",
        "body": [
            "const me = this;",
            "const view = me.getView();",
            "const viewModel = me.getViewModel();$0"
        ],
        "description": "Get ViewModel"
    },
    "Each": {
        "scope": "javascript",
        "prefix": "eac",
        "body": [
            "Ext.each(${1:collection}, function (item, index) {",
            "\t$0",
            "});"
        ],
        "description": "Ext JS Each"
    },
    "Ajax": {
        "scope": "javascript",
        "prefix": "aj",
        "body": [
            "Ext.Ajax.request({",
            "\turl: '${1:url/data}',",
            "\tmethod: '${2:method}',",
            "\tscope: me,",
            "\tsuccess: me.on${2:Ajax}Success,",
            "\tfailure: me.on${3:Ajax}Failure,",
            "});$0"
        ],
        "description": "Ext Ajax REquest"
    },
    "Down Component": {
        "scope": "javascript",
        "prefix": "dcp",
        "body": [
            "me.${1:queryComponent} = me.down('${1:queryComponent}');"
        ],
        "description": "Down Component"
    },
    "Lookup Component": {
        "scope": "javascript",
        "prefix": "lcp",
        "body": [
            "me.${1:queryComponent} = me.lookup('${1:queryComponent}');"
        ],
        "description": "Lookup Component"
    },
    "logS": {
        "scope": "javascript",
        "prefix": "log",
        "body": [
            "console.log(${1:logText});",
            "$0"
        ],
        "description": "Log"
    },
    "Ext.log": {
        "scope": "javascript",
        "prefix": "extl",
        "body": [
            "Ext.log({",
            "\tmsg: '${1:logText}',",
            "\tlevel: 'info',",
            "\tstack: true",
            "});",
            "$0",
        ],
        "description": "Ext.log"
    },
    "NewViewModel": {
        "scope": "javascript",
        "prefix": "newvm",
        "body": [
            "Ext.define('${1:app}.view.${2:context}.${3:feature}ViewModel', {",
            "\textend: 'Ext.app.ViewModel',",
            "\talias: 'viewmodel.${4:featureAlias}',",
            "\tdata: {",
            "\t\t$0",
            "\t},",
            "\tstores: {",
            "\t},",
            "\tformulas: {",
            "\t}",
            "});"
        ],
        "description": "Generate a new viewModel template"
    },
    "NewViewController": {
        "scope": "javascript",
        "prefix": "newvc",
        "body": [
            "Ext.define('${1:app}.view.${2:context}.${3:feature}Controller', {",
            "\textend: 'Ext.app.ViewController',",
            "\talias: 'controller.${4:featureAlias}',",
            "\tinit: function () {",
            "\t\t$0",
            "\t},",
            "\tinitViewModel: function (viewModel) {",
            "\t\t",
            "\t},",
            "\tdestroy: function () {",
            "\t\tconst me = this;",
            "\t\tme.callParent([arguments]);",
            "\t}",
            "});"
        ],
        "description": "Generate a new controller template"
    },
    "NewView": {
        "scope": "javascript",
        "prefix": "newvw",
        "body": [
            "Ext.define('${1:app}.view.${2:context}.${3:feature}Controller', {",
            "\textend: '${4:extendView}',",
            "\txtype: '${5:xtype}',",
            "\titems: [{",
            "\t\t$0",
            "\t}],",
            "});"
        ],
        "description": "Generate a new view template"
    },
    "MeCallParent": {
        "scope": "javascript",
        "prefix": "mcap",
        "body": [
            "me.callParent([arguments]);",
            "$0"
        ],
        "description": "Generate a me call parent arguments"
    },
    "Ext.Ajax.request.successMethodCallback": {
        "scope": "javascript",
        "prefix": "easuccess",
        "body": [
            "${1:functionName}Success: function (response, eOpts) {",
            "\tconst json = response.responseText ? Ext.decode(response.responseText, true) : {};",
            "\t$0",
            "}"
        ],
        "description": "Generate a function callback with \"Success\" suffix."
    },
    "Ext.Ajax.request.failureMethodCallback": {
        "scope": "javascript",
        "prefix": "eafailure",
        "body": [
            "${1:functionName}Failure: function (response, eOpts) {",
            "\tconst json = response.responseText ? Ext.decode(response.responseText, true) : {};",
            "\t$0",
            "}"
        ],
        "description": "Generate a function callback with \"Failure\" suffix."
    },
    "HboxLayout": {
        "scope": "javascript",
        "prefix": "lhb",
        "body": [
            "layout:{",
            "\ttype: 'hbox',",
            "\talign: 'stretch',",
            "\tpack: 'start'",
            "}$0"
        ],
        "description": "Generate a HBox layout config."
    },
    "VboxLayout": {
        "scope": "javascript",
        "prefix": "lvb",
        "body": [
            "layout:{",
            "\ttype: 'vbox',",
            "\talign: 'stretch',",
            "\tpack: 'start'",
            "}$0"
        ],
        "description": "Generate a VBox layout config."
    },
    "CardLayout": {
        "scope": "javascript",
        "prefix": "lcard",
        "body": [
            "layout:{",
            "\ttype: 'card'",
            "}$0"
        ],
        "description": "Generate a Card layout config."
    },
    "FitLayout": {
        "scope": "javascript",
        "prefix": "lfit",
        "body": [
            "layout:{",
            "\ttype: 'fit'",
            "}$0"
        ],
        "description": "Generate a Fit layout config."
    }
}